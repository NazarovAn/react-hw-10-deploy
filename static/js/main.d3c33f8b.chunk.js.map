{"version":3,"sources":["components/HW-10.1/actions/actionTypes.js","components/HW-10.1/actions/actionCreators.js","components/HW-10.1/components/ServiceAdd.js","components/HW-10.1/components/ServiceList.js","components/HW-10.1/components/ServiceAddClassBased.js","components/HW-10.1/components/ServiceListClassBased.js","components/HW-10.1/reducers/serviceAdd.js","components/HW-10.1/reducers/serviceEdit.js","components/HW-10.1/reducers/serviceList.js","components/HW-10.1/store/store.js","components/HW-10.1/Services.js","components/HW-10.2/actions/actionTypes.js","components/HW-10.2/actions/actionCreators.js","components/HW-10.2/components/ServiceAdd.js","components/HW-10.2/components/ServiceList.js","components/HW-10.2/components/ServiceFilter.js","components/HW-10.2/components/ServiceAddClassBased.js","components/HW-10.2/components/ServiceListClassBased.js","components/HW-10.2/components/ServiceFilterClassBased.js","components/HW-10.2/reducers/serviceAdd.js","components/HW-10.2/reducers/serviceEdit.js","components/HW-10.2/reducers/serviceList.js","components/HW-10.2/data/data.js","components/HW-10.2/reducers/serviceFilter.js","components/HW-10.2/store/store.js","components/HW-10.2/Filter.js","components/HW-10.3/components/MarketItem.js","components/HW-10.3/components/MarketList.js","components/HW-10.3/actions/actionTypes.js","components/HW-10.3/actions/actionCreators.js","components/HW-10.3/components/AddMarketItem.js","components/HW-10.3/reducers/addItem.js","components/HW-10.3/data/data.js","components/HW-10.3/reducers/marketList.js","components/HW-10.3/store/store.js","components/HW-10.3/Market.js","components/Navigation/Navigation.js","App.js","index.js"],"names":["ADD_SERVICE","REMOVE_SERVICE","GET_EDITED_SERVICE_ID","CLEAR_EDITED_SERVICE_ID","SAVE_EDITED_SERVICE","CHANGE_SERVICE_FIELD","CLEAR_SERVICE_FIELD","addService","service","type","payload","removeService","id","changeServiceField","name","value","clearServiceField","getEditedServiceId","clearEditedServiceId","saveEditedService","ServiceAdd","dispatch","useDispatch","item","useSelector","state","serviceAdd","editedServiceId","serviceEdit","handleChange","event","target","onSubmit","preventDefault","editedService","price","className","onChange","onClick","ServiceList","list","serviceList","map","handleEdit","ServiceAddClassBased","props","handleSubmit","onSaveEdit","onSave","onClear","handleCancel","this","Component","connect","ServiceListClassBased","handleRemove","editService","items","initialState","serviceAddReducer","action","serviceEditReducer","nanoid","serviceListReducer","filter","reducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Services","SAVE_EDITED_SERVICE_ID","FILTER_SERVICE","CLEAR_FILTER","UPDATE_FILTERED_LIST","filterServices","criteria","clearFilter","updateFilteredList","newList","placeholder","filteredList","serviceFilter","isFiltered","displayedList","ServiceFilter","initialList","delayTimer","useEffect","clearTimeout","length","setTimeout","ServiceFilterClassBased","onFilter","onUpdate","cryteria","toLocaleLowerCase","includes","trim","newFilteredList","Filter","MarketItem","link","image","saleType","oldPrice","discountPercent","Math","round","Number","isNaN","chooseDiscountText","src","alt","href","slice","MarketList","marketList","key","ADD_MARKET_ITEM","CLEAR_MARKET_ITEM_FIELDS","CHANGE_MARKET_ITEM_FIELD","CHANGE_MARKET_ITEM_SALE_TYPE","changeMarketItemField","AddMarketItem","addItem","imageInputRef","useRef","dispatchPriceInput","stateValue","test","handleInput","newItem","addMarketItem","required","selectValue","current","click","ref","files","reader","FileReader","readAsDataURL","onload","result","Market","Navigation","useState","visibility","setVisibility","activeStyle","color","to","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3c33f8b.chunk.js","sourcesContent":["export const ADD_SERVICE = 'ADD_SERVICE';\r\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\r\n\r\nexport const GET_EDITED_SERVICE_ID = 'GET_EDITED_SERVICE_ID';\r\nexport const CLEAR_EDITED_SERVICE_ID = 'CLEAR_EDITED_SERVICE_ID';\r\nexport const SAVE_EDITED_SERVICE = 'SAVE_EDITED_SERVICE';\r\n\r\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\r\nexport const CLEAR_SERVICE_FIELD = 'CLEAR_SERVICE_FIELD';","import { \r\n  ADD_SERVICE,\r\n  CHANGE_SERVICE_FIELD,\r\n  CLEAR_SERVICE_FIELD,\r\n  REMOVE_SERVICE,\r\n  GET_EDITED_SERVICE_ID,\r\n  CLEAR_EDITED_SERVICE_ID,\r\n  SAVE_EDITED_SERVICE,\r\n} from './actionTypes';\r\n\r\nexport function addService(service) {\r\n  return { type: ADD_SERVICE, payload: service };\r\n}\r\nexport function removeService(id) {\r\n  return { type: REMOVE_SERVICE, payload: id };\r\n}\r\n\r\nexport function changeServiceField(name, value) {\r\n  return { type: CHANGE_SERVICE_FIELD, payload: { name, value } };\r\n}\r\nexport function clearServiceField() {\r\n  return { type: CLEAR_SERVICE_FIELD }\r\n}\r\n\r\nexport function getEditedServiceId(id) {\r\n  return { type: GET_EDITED_SERVICE_ID, payload: id };\r\n}\r\nexport function clearEditedServiceId() {\r\n  return { type: CLEAR_EDITED_SERVICE_ID };\r\n}\r\nexport function saveEditedService(service) {\r\n  return { type: SAVE_EDITED_SERVICE, payload: service };\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addService, changeServiceField, saveEditedService, clearServiceField, clearEditedServiceId } from '../actions/actionCreators';\r\n\r\nexport default function ServiceAdd() {\r\n  const dispatch = useDispatch();\r\n  const item = useSelector(state => state.serviceAdd);\r\n  const editedServiceId = useSelector(state => state.serviceEdit);\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(changeServiceField(event.target.name, event.target.value ));\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(editedServiceId) {\r\n      const editedService = {\r\n        id: editedServiceId,\r\n        name: item.name,\r\n        price: item.price,\r\n      }\r\n\r\n      dispatch(saveEditedService(editedService));\r\n      dispatch(clearEditedServiceId());\r\n    } else {\r\n      dispatch(addService({ name: item.name, price: item.price }));\r\n    }\r\n    dispatch(clearServiceField());\r\n  }\r\n\r\n  const handleCancel = (event) => {\r\n    event.preventDefault();\r\n    dispatch(clearServiceField());\r\n    dispatch(clearEditedServiceId());\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input className=\"services_input\" onChange={ handleChange } name=\"name\" value={ item.name } />\r\n      <input className=\"services_input\" onChange={ handleChange } name=\"price\" value={ item.price } />\r\n      <button className=\"services_button\">Save</button>\r\n      <button className=\"services_button\" onClick={ handleCancel }>Cancel</button>\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeService, getEditedServiceId, changeServiceField, clearServiceField, clearEditedServiceId } from '../actions/actionCreators';\r\n\r\nexport default function ServiceList() {\r\n  const list = useSelector(state => state.serviceList);\r\n  const editedServiceId = useSelector(state => state.serviceEdit);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRemove = (id) => {\r\n    if (editedServiceId === id) {\r\n      dispatch(clearServiceField());\r\n      dispatch(clearEditedServiceId());  \r\n    }\r\n    dispatch(removeService(id));\r\n  }\r\n\r\n  const handleEdit = (service) => {\r\n    dispatch(getEditedServiceId(service.id));\r\n    dispatch(changeServiceField('name', service.name));\r\n    dispatch(changeServiceField('price', service.price));\r\n  }\r\n\r\n  return (\r\n    <ul className=\"pd_1\">\r\n      { list.map((service) => {\r\n        return (\r\n          <li key={ service.id }>\r\n            <span>{ service.name } - { service.price }</span>&nbsp;\r\n            <button className=\"services_button\" onClick={ () => handleRemove(service.id) }>X</button>\r\n            <button className=\"services_button\" onClick={ () => handleEdit(service) }>Edit</button>\r\n          </li>)\r\n      }) }\r\n    </ul>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addService, changeServiceField, saveEditedService, clearServiceField, clearEditedServiceId } from '../actions/actionCreators';\r\n\r\nclass ServiceAddClassBased extends Component {\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.props.onChange(name, value);\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(this.props.editedServiceId) {\r\n      const editedService = {\r\n        id: this.props.editedServiceId,\r\n        name: this.props.item.name,\r\n        price: this.props.item.price,\r\n      }\r\n\r\n      this.props.onSaveEdit(editedService);\r\n    } else {\r\n      const { name, price } = this.props.item;\r\n      this.props.onSave(name, price);\r\n    }\r\n    this.props.onClear();\r\n  }\r\n\r\n  handleCancel = (event) => {\r\n    event.preventDefault();\r\n    this.props.onClear();\r\n  }\r\n\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n    <form onSubmit={ this.handleSubmit }>\r\n      <input className=\"services_input\" name='name' onChange={ this.handleChange } value={ item.name } />\r\n      <input className=\"services_input\" name='price' onChange={ this.handleChange } value={ item.price } />\r\n      <button className=\"services_button\" type='submit'>Save</button>\r\n      <button className=\"services_button\" type='submit' onClick={ this.handleCancel }>Cancel</button>\r\n    </form>\r\n  )}\r\n}\r\n\r\nServiceAddClassBased.propTypes = {\r\n  item: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  }).isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  item: state.serviceAdd,\r\n  editedServiceId: state.serviceEdit,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (name, value) => dispatch(changeServiceField(name, value)),\r\n    onSave: (name, price) => dispatch(addService({ name, price })),\r\n    onSaveEdit: (service) => dispatch(saveEditedService(service)),\r\n    onClear: () => {\r\n      dispatch(clearServiceField());\r\n      dispatch(clearEditedServiceId());\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ServiceAddClassBased);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { removeService, getEditedServiceId, changeServiceField, clearServiceField, clearEditedServiceId } from '../actions/actionCreators';\r\n\r\nclass ServiceListClassBased extends Component {\r\n  handleRemove = (id) => {\r\n    if (this.props.editedServiceId === id) {\r\n      this.props.onClear();  \r\n    }\r\n    this.props.removeService(id);\r\n  }\r\n\r\n  handleEdit = (service) => {\r\n    this.props.editService(service);\r\n  }\r\n\r\n  render() {\r\n    const { items } = this.props;\r\n\r\n    return (\r\n      <ul className=\"pd_1\" >\r\n        {items.map((service) => {\r\n          const { id, name, price } = service;\r\n          return (\r\n            <li key={ id }>\r\n              <span>{ name } { price }</span>&nbsp;\r\n              <button className=\"services_button\" onClick={ () => this.handleRemove(id) }>X</button>\r\n              <button className=\"services_button\" onClick={ () => this.handleEdit(service) }>Edit</button>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nServiceListClassBased.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.serviceList,\r\n  editedServiceId: state.serviceEdit,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeService: (id) => dispatch(removeService(id)),\r\n    editService: (service) => {\r\n      const { id, name, price } = service;\r\n      dispatch(getEditedServiceId(id));\r\n      dispatch(changeServiceField('name', name));\r\n      dispatch(changeServiceField('price', price));\r\n    },\r\n    onClear: () => {\r\n      dispatch(clearServiceField());\r\n      dispatch(clearEditedServiceId());\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ServiceListClassBased);\r\n","import { CHANGE_SERVICE_FIELD, CLEAR_SERVICE_FIELD } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    price: '',\r\n}\r\n\r\nconst serviceAddReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_SERVICE_FIELD:\r\n      const { name, value } = action.payload;\r\n      return { ...state, [name]: value };\r\n\r\n    case CLEAR_SERVICE_FIELD:\r\n      return initialState\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default serviceAddReducer\r\n","import {\r\n  GET_EDITED_SERVICE_ID,\r\n  CLEAR_EDITED_SERVICE_ID,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = null;\r\n\r\nconst serviceEditReducer = (state = initialState, action) => {\r\n  switch (action.type) {    \r\n    case GET_EDITED_SERVICE_ID:\r\n      return action.payload;\r\n\r\n    case CLEAR_EDITED_SERVICE_ID:\r\n      return initialState;\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default serviceEditReducer;\r\n","import { nanoid } from \"nanoid\";\r\nimport { \r\n  ADD_SERVICE,\r\n  REMOVE_SERVICE,\r\n  SAVE_EDITED_SERVICE,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = [\r\n  { id: nanoid(), name: 'Замена стекла', price: 21000 },\r\n  { id: nanoid(), name: 'Замена дисплея', price: 25000 },\r\n];\r\n\r\nconst serviceListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_SERVICE:\r\n      return [...state, { id:nanoid(), ...action.payload }];\r\n    \r\n    case REMOVE_SERVICE:\r\n      const id = action.payload;\r\n      return state.filter((service) => service.id !== id);\r\n\r\n    case SAVE_EDITED_SERVICE:\r\n      const editedService = action.payload;\r\n      return state.map((service) => service.id === editedService.id ? editedService : service);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default serviceListReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport serviceAddReducer from '../reducers/serviceAdd';\r\nimport serviceEditReducer from '../reducers/serviceEdit';\r\nimport serviceListReducer from '../reducers/serviceList';\r\n\r\nconst reducer = combineReducers({\r\n  serviceAdd: serviceAddReducer,\r\n  serviceEdit: serviceEditReducer,\r\n  serviceList: serviceListReducer,\r\n})\r\n \r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport './Services.css';\r\nimport ServiceAdd from './components/ServiceAdd';\r\nimport ServiceList from './components/ServiceList';\r\nimport ServiceAddClassBased from './components/ServiceAddClassBased';\r\nimport ServiceListClassBased from './components/ServiceListClassBased';\r\nimport store from './store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nexport default function Services() {\r\n  return (\r\n    <Provider store={ store }>\r\n      <div className=\"pd_1\">\r\n        <ServiceAdd />\r\n        <ServiceList />\r\n        <ServiceAddClassBased />\r\n        <ServiceListClassBased />\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n","export const ADD_SERVICE = 'ADD_SERVICE';\r\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\r\n\r\nexport const SAVE_EDITED_SERVICE_ID = 'SAVE_EDITED_SERVICE_ID';\r\nexport const CLEAR_EDITED_SERVICE_ID = 'CLEAR_EDITED_SERVICE_ID';\r\nexport const SAVE_EDITED_SERVICE = 'SAVE_EDITED_SERVICE';\r\n\r\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\r\nexport const CLEAR_SERVICE_FIELD = 'CLEAR_SERVICE_FIELD';\r\n\r\nexport const FILTER_SERVICE='FILTER_SERVICE';\r\nexport const CLEAR_FILTER='CLEAR_FILTER';\r\nexport const UPDATE_FILTERED_LIST='UPDATE_FILTERED_LIST';\r\n","import { \r\n  ADD_SERVICE,\r\n  CHANGE_SERVICE_FIELD,\r\n  CLEAR_SERVICE_FIELD,\r\n  REMOVE_SERVICE,\r\n  SAVE_EDITED_SERVICE_ID,\r\n  CLEAR_EDITED_SERVICE_ID,\r\n  SAVE_EDITED_SERVICE,\r\n  FILTER_SERVICE,\r\n  CLEAR_FILTER,\r\n  UPDATE_FILTERED_LIST,\r\n} from './actionTypes';\r\n\r\nexport function addService(service) {\r\n  return { type: ADD_SERVICE, payload: service };\r\n}\r\nexport function removeService(id) {\r\n  return { type: REMOVE_SERVICE, payload: id };\r\n}\r\n\r\nexport function filterServices(criteria, list) {\r\n  return { type: FILTER_SERVICE, payload: { criteria, list } };\r\n}\r\nexport function clearFilter() {\r\n  return { type: CLEAR_FILTER };\r\n}\r\nexport function updateFilteredList(newList) {\r\n  return { type: UPDATE_FILTERED_LIST, payload: newList }\r\n}\r\n\r\nexport function changeServiceField(name, value) {\r\n  return { type: CHANGE_SERVICE_FIELD, payload: { name, value } };\r\n}\r\nexport function clearServiceField() {\r\n  return { type: CLEAR_SERVICE_FIELD }\r\n}\r\n\r\nexport function getEditedServiceId(id) {\r\n  return { type: SAVE_EDITED_SERVICE_ID, payload: id };\r\n}\r\nexport function clearEditedServiceId() {\r\n  return { type: CLEAR_EDITED_SERVICE_ID };\r\n}\r\nexport function saveEditedService(service) {\r\n  return { type: SAVE_EDITED_SERVICE, payload: service };\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n  addService,\r\n  changeServiceField,\r\n  saveEditedService,\r\n  clearServiceField,\r\n  clearEditedServiceId,\r\n} from '../actions/actionCreators';\r\n\r\nexport default function ServiceAdd() {\r\n  const dispatch = useDispatch();\r\n  const item = useSelector(state => state.serviceAdd);\r\n  const editedServiceId = useSelector(state => state.serviceEdit);\r\n\r\n  const handleChange = (event) => {\r\n    dispatch(changeServiceField(event.target.name, event.target.value ));\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(editedServiceId) {\r\n      const editedService = {\r\n        id: editedServiceId,\r\n        name: item.name,\r\n        price: item.price,\r\n      }\r\n\r\n      dispatch(saveEditedService(editedService));\r\n      dispatch(clearEditedServiceId());\r\n    } else {\r\n      dispatch(addService({ name: item.name, price: item.price }));\r\n    }\r\n    dispatch(clearServiceField());\r\n  }\r\n\r\n  const handleCancel = (event) => {\r\n    event.preventDefault();\r\n    dispatch(clearServiceField());\r\n    dispatch(clearEditedServiceId());\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input className=\"services_input\" onChange={ handleChange } placeholder=\"Название\" name=\"name\" value={ item.name } />\r\n      <input className=\"services_input\" onChange={ handleChange } placeholder=\"Цена\" name=\"price\" value={ item.price } />\r\n      <button className=\"services_button\">Save</button>\r\n      <button className=\"services_button\" onClick={ handleCancel }>Cancel</button>\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { \r\n  removeService,\r\n  getEditedServiceId,\r\n  changeServiceField,\r\n  clearServiceField,\r\n  clearEditedServiceId,\r\n} from '../actions/actionCreators';\r\n\r\nexport default function ServiceList() {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector(state => state.serviceList);\r\n  const filteredList = useSelector(state => state.serviceFilter.filteredList);\r\n  const isFiltered = useSelector(state => state.serviceFilter.isFiltered);\r\n  const editedServiceId = useSelector(state => state.serviceEdit);\r\n\r\n  const displayedList = isFiltered ? filteredList : list;\r\n\r\n  const handleRemove = (id) => {\r\n    if (editedServiceId === id) {\r\n      dispatch(clearServiceField());\r\n      dispatch(clearEditedServiceId());  \r\n    }    \r\n    dispatch(removeService(id));\r\n  }\r\n\r\n  const handleEdit = (service) => {\r\n    dispatch(getEditedServiceId(service.id));\r\n    dispatch(changeServiceField('name', service.name));\r\n    dispatch(changeServiceField('price', service.price));\r\n  }\r\n\r\n  return (\r\n    <ul className=\"pd_1\">\r\n      { displayedList.map((service) => {\r\n        return (\r\n          <li key={ service.id }>\r\n            <span>{ service.name } - { service.price }</span>&nbsp;\r\n            <button className=\"services_button\" onClick={ () => handleRemove(service.id) }>X</button>\r\n            <button className=\"services_button\" onClick={ () => handleEdit(service) }>Edit</button>\r\n          </li>)\r\n      }) }\r\n    </ul>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterServices, clearFilter, updateFilteredList } from '../actions/actionCreators';\r\n\r\nexport default function ServiceFilter() {\r\n  const dispatch = useDispatch();\r\n  const initialList = useSelector(state => state.serviceList);\r\n  const { isFiltered } = useSelector(state => state.serviceFilter);\r\n  let delayTimer = null;\r\n  \r\n  const handleChange = (event) => {\r\n    const criteria = event.target.value;\r\n    clearTimeout(delayTimer);\r\n    if (criteria.length > 0) {\r\n      delayTimer = setTimeout(() => dispatch(filterServices(event.target.value, initialList)), 500);\r\n    } else {\r\n      dispatch(clearFilter());\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isFiltered) {\r\n      dispatch(updateFilteredList(initialList));\r\n    }\r\n  }, [dispatch, initialList, isFiltered]);\r\n\r\n  return (\r\n    <input className=\"services_input\" placeholder=\"Поиск услуги\" onChange={ handleChange } />\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addService, changeServiceField, saveEditedService, clearServiceField, clearEditedServiceId } from '../actions/actionCreators';\r\n\r\nclass ServiceAddClassBased extends Component {\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.props.onChange(name, value);\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(this.props.editedServiceId) {\r\n      const editedService = {\r\n        id: this.props.editedServiceId,\r\n        name: this.props.item.name,\r\n        price: this.props.item.price,\r\n      }\r\n\r\n      this.props.onSaveEdit(editedService);\r\n    } else {\r\n      const { name, price } = this.props.item;\r\n      this.props.onSave(name, price);\r\n    }\r\n    this.props.onClear();\r\n  }\r\n\r\n  handleCancel = (event) => {\r\n    event.preventDefault();\r\n    this.props.onClear();\r\n  }\r\n\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n    <form onSubmit={ this.handleSubmit }>\r\n      <input className=\"services_input\" name='name' onChange={ this.handleChange } placeholder=\"Название\" value={ item.name } />\r\n      <input className=\"services_input\" name='price' onChange={ this.handleChange } placeholder=\"Цена\" value={ item.price } />\r\n      <button className=\"services_button\" type='submit'>Save</button>\r\n      <button className=\"services_button\" type='submit' onClick={ this.handleCancel }>Cancel</button>\r\n    </form>\r\n  )}\r\n}\r\n\r\nServiceAddClassBased.propTypes = {\r\n  item: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  }).isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  item: state.serviceAdd,\r\n  editedServiceId: state.serviceEdit,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (name, value) => dispatch(changeServiceField(name, value)),\r\n    onSave: (name, price) => dispatch(addService({ name, price })),\r\n    onSaveEdit: (service) => dispatch(saveEditedService(service)),\r\n    onClear: () => {\r\n      dispatch(clearServiceField());\r\n      dispatch(clearEditedServiceId());\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ServiceAddClassBased);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  removeService,\r\n  getEditedServiceId,\r\n  changeServiceField,\r\n  clearServiceField,\r\n  clearEditedServiceId\r\n} from '../actions/actionCreators';\r\n\r\nclass ServiceListClassBased extends Component {\r\n  handleRemove = (id) => {\r\n    if (this.props.editedServiceId === id) {\r\n      this.props.onClear();  \r\n    }\r\n    this.props.removeService(id);\r\n  }\r\n\r\n  handleEdit = (service) => {\r\n    this.props.editService(service);\r\n  }\r\n\r\n  render() {\r\n    const { items, filteredList, isFiltered } = this.props;\r\n    const displayedList = isFiltered ? filteredList : items;\r\n\r\n    return (\r\n      <ul className=\"pd_1\" >\r\n        {displayedList.map((service) => {\r\n          const { id, name, price } = service;\r\n          return (\r\n            <li key={ id }>\r\n              <span>{ name } { price }</span>&nbsp;\r\n              <button className=\"services_button\" onClick={ () => this.handleRemove(id) }>X</button>\r\n              <button className=\"services_button\" onClick={ () => this.handleEdit(service) }>Edit</button>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nServiceListClassBased.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.serviceList,\r\n  editedServiceId: state.serviceEdit,\r\n  filteredList: state.serviceFilter.filteredList,\r\n  isFiltered: state.serviceFilter.isFiltered,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeService: (id) => dispatch(removeService(id)),\r\n    editService: (service) => {\r\n      const { id, name, price } = service;\r\n      dispatch(getEditedServiceId(id));\r\n      dispatch(changeServiceField('name', name));\r\n      dispatch(changeServiceField('price', price));\r\n    },\r\n    onClear: () => {\r\n      dispatch(clearServiceField());\r\n      dispatch(clearEditedServiceId());\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ServiceListClassBased);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filterServices, clearFilter, updateFilteredList } from '../actions/actionCreators';\r\n\r\nclass ServiceFilterClassBased extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.delayTimer = null;\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const criteria = event.target.value;    \r\n    clearTimeout(this.delayTimer);\r\n\r\n    if (criteria.length > 0) {\r\n      this.delayTimer = setTimeout(() => this.props.onFilter(event.target.value, this.props.initialList), 500);\r\n    } else {\r\n      this.props.onClear();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.props.onUpdate(this.props.initialList, this.props.isFiltered);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <input className=\"services_input\" placeholder=\"Поиск услуги\" onChange={ this.handleChange } />\r\n    )\r\n  }\r\n}\r\n\r\nServiceFilterClassBased.propTypes = {\r\n  initialList: PropTypes.array.isRequired,\r\n  isFiltered: PropTypes.bool.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n  onClear: PropTypes.func.isRequired,\r\n  onUpdate: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialList: state.serviceList,\r\n  isFiltered: state.serviceFilter.isFiltered,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFilter: (value, list) => dispatch(filterServices(value, list)),\r\n    onClear: () => dispatch(clearFilter()),\r\n    onUpdate: (list, isFiltered) => {\r\n      if (isFiltered) {\r\n        dispatch(updateFilteredList(list));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ServiceFilterClassBased);\r\n","import { CHANGE_SERVICE_FIELD, CLEAR_SERVICE_FIELD } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    price: '',\r\n}\r\n\r\nconst serviceAddReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_SERVICE_FIELD:\r\n      const { name, value } = action.payload;\r\n      return { ...state, [name]: value };\r\n\r\n    case CLEAR_SERVICE_FIELD:\r\n      return initialState;\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default serviceAddReducer\r\n","import {\r\n  SAVE_EDITED_SERVICE_ID,\r\n  CLEAR_EDITED_SERVICE_ID,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = null;\r\n\r\nconst serviceEditReducer = (state = initialState, action) => {\r\n  switch (action.type) {    \r\n    case SAVE_EDITED_SERVICE_ID:\r\n      return action.payload;\r\n\r\n    case CLEAR_EDITED_SERVICE_ID:\r\n      return initialState;\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default serviceEditReducer;\r\n","import { nanoid } from \"nanoid\";\r\nimport { \r\n  ADD_SERVICE,\r\n  REMOVE_SERVICE,\r\n  SAVE_EDITED_SERVICE,\r\n} from '../actions/actionTypes';\r\nimport data from '../data/data';\r\n\r\nconst initialState = data;\r\n\r\nconst serviceListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_SERVICE:\r\n      return [...state, { id:nanoid(), ...action.payload }];\r\n    \r\n    case REMOVE_SERVICE:\r\n      const id = action.payload;\r\n      return state.filter((service) => service.id !== id);\r\n\r\n    case SAVE_EDITED_SERVICE:\r\n      const editedService = action.payload;\r\n      return state.map((service) => service.id === editedService.id ? editedService : service);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default serviceListReducer;\r\n","import { nanoid } from 'nanoid';\r\n\r\nconst data = [\r\n  { id: nanoid(), name: 'Диагностика ноутбука', price: 'Бесплатно' },\r\n  { id: nanoid(), name: 'Доставка в сервисный центр', price: 'Бесплатно' },\r\n  { id: nanoid(), name: 'Гарантийный ремонт ноутбука', price: 'Бесплатно' },\r\n  { id: nanoid(), name: 'Чистка ноутбука от пыли и грязи, замена термопасты', price: 'от 750 руб' },\r\n  { id: nanoid(), name: 'Замена матрицы (разбитого экрана)', price: 'от 650 руб' },\r\n  { id: nanoid(), name: 'Замена клавиатуры', price: '500 руб' },\r\n  { id: nanoid(), name: 'Замена жесткого диска (HDD, SSD)', price: '350 руб' },\r\n  { id: nanoid(), name: 'Замена оперативной памяти', price: '350 руб' },\r\n  { id: nanoid(), name: 'Замена дисковода (DVD привода)', price: 'от 500 руб' },\r\n  { id: nanoid(), name: 'Ремонт материнской платы', price: 'от 950 руб' },\r\n  { id: nanoid(), name: 'Замена южного моста', price: 'от 1800 руб' },\r\n  { id: nanoid(), name: 'Замена северного моста', price: 'от 1800 руб' },\r\n  { id: nanoid(), name: 'Ремонт видеокарты, перепайка видеочипа, BGA-реболлинг', price: 'от 1800 руб' },\r\n  { id: nanoid(), name: 'Замена разъема питания, USB, Lan, HDMI, Audio jack, DVI, VGA', price: 'от 550 руб' },\r\n  { id: nanoid(), name: 'Замена процессора', price: '750 руб' },\r\n  { id: nanoid(), name: 'Замена кулера системы охлаждения', price: '500 руб' },\r\n  { id: nanoid(), name: 'Замена шлейфа на ноутбуке', price: '500 руб' },\r\n  { id: nanoid(), name: 'Замена петель крышки экрана', price: '750 руб' },\r\n  { id: nanoid(), name: 'Замена тачпада ноутбука', price: '500 руб' },\r\n  { id: nanoid(), name: 'Замена аккумулятора ноутбука', price: '350 руб' },\r\n  { id: nanoid(), name: 'Ремонт залитого ноутбука, химическая чистка', price: 'от 950 руб' },\r\n  { id: nanoid(), name: 'Замена дискретной видеокарты', price: '750 руб' },\r\n];\r\n\r\nexport default data;\r\n","import {\r\n  FILTER_SERVICE,\r\n  CLEAR_FILTER,\r\n  UPDATE_FILTERED_LIST,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  list: null,\r\n  filteredList: null,\r\n  cryteria: null,\r\n  isFiltered: false,\r\n};\r\n\r\nexport default function serviceFilterReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FILTER_SERVICE:\r\n      const { list, criteria } = action.payload;\r\n      const filteredList = list.filter((service) => service.name.toLocaleLowerCase().includes(criteria.trim()));\r\n      return { list, filteredList, criteria, isFiltered: true };\r\n\r\n    case UPDATE_FILTERED_LIST:\r\n      const newList = action.payload;\r\n      const newFilteredList = newList.filter((service) => service.name.toLocaleLowerCase().includes(state.criteria.trim()));\r\n      return { ...state, list: newList, filteredList: newFilteredList };\r\n    \r\n    case CLEAR_FILTER:\r\n      return initialState;\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, combineReducers } from \"redux\";\r\nimport serviceAddReducer from '../reducers/serviceAdd';\r\nimport serviceEditReducer from '../reducers/serviceEdit';\r\nimport serviceListReducer from '../reducers/serviceList';\r\nimport serviceFilterReducer from '../reducers/serviceFilter';\r\n\r\nconst reducer = combineReducers({\r\n  serviceAdd: serviceAddReducer,\r\n  serviceEdit: serviceEditReducer,\r\n  serviceList: serviceListReducer,\r\n  serviceFilter: serviceFilterReducer,\r\n})\r\n \r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport './Filter.css';\r\nimport ServiceAdd from './components/ServiceAdd';\r\nimport ServiceList from './components/ServiceList';\r\nimport ServiceFilter from './components/ServiceFilter';\r\nimport ServiceAddClassBased from './components/ServiceAddClassBased';\r\nimport ServiceListClassBased from './components/ServiceListClassBased';\r\nimport ServiceFilterClassBased from './components/ServiceFilterClassBased';\r\nimport store from './store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nexport default function Filter() {\r\n  return (\r\n    <Provider store={ store }>\r\n      <div className=\"pd_1 flex\">\r\n        <div className=\"pd_1 flex_column\">\r\n          <h3 className=\"pd_1\">Functional components</h3>\r\n          <ServiceAdd />\r\n          <ServiceList />\r\n          <ServiceFilter />\r\n        </div>\r\n        <div className=\"pd_1 flex_column\">\r\n          <h3 className=\"pd_1\">Class based components </h3>\r\n          <ServiceAddClassBased />\r\n          <ServiceListClassBased />\r\n          <ServiceFilterClassBased />\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './MarketItem.css';\r\n\r\nexport default function MarketItem(props) {\r\n  const { name, price, link, image, saleType, oldPrice } = props;\r\n  const rublSign = '\\u20BD';\r\n\r\n  const chooseDiscountText = () => {\r\n    switch (saleType) {\r\n      case 'discount':\r\n        const discountPercent = Math.round((oldPrice - price) / (oldPrice / 100));\r\n        return Number.isNaN(discountPercent) ? <span className='discount_icon__text'>Акция</span> : discountPercent + '%';    \r\n      case 'latest':\r\n        return <span className='discount_icon__text'>New</span>;\r\n      default:\r\n        return <span className='discount_icon__text'>Акция</span>;\r\n    }\r\n  }\r\n\r\n  const shortenName = () => {\r\n    return name.length > 26 ? name.slice(0, 26) + '...' : name;\r\n  }\r\n\r\n  return (\r\n    <li className='market_item'>\r\n      { saleType ? <div className='discount_icon'>{ chooseDiscountText() }</div> : null }\r\n      <img className='market_item__img' src={ image ? image : 'https://via.placeholder.com/120x150.png' } alt={ name } />\r\n      <div className='market_item__price_wrapper'>\r\n        <span>{ price }{ rublSign }</span>&nbsp;\r\n        { oldPrice ? <span className='market_item__old_price'>{ oldPrice }{ rublSign }</span> : null }\r\n      </div>\r\n      <a href={ link } className='market_item__link'>{ shortenName() }</a>\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport MarketItem from './MarketItem';\r\nimport './MarketList.css';\r\n\r\nexport default function MarketList() {\r\n  const list = useSelector(state => state.marketList);\r\n  return (\r\n    <ul className=\"market_list\">\r\n      { list.map((item) => <MarketItem { ...item } key={ item.id } />) }\r\n    </ul>\r\n  )\r\n}\r\n","export const ADD_MARKET_ITEM = 'ADD_MARKET_ITEM';\r\n\r\nexport const CLEAR_MARKET_ITEM_FIELDS = 'CLEAR_MARKET_ITEM_FIELDS';\r\nexport const CHANGE_MARKET_ITEM_FIELD = 'CHANGE_MARKET_ITEM_FIELD';\r\nexport const CHANGE_MARKET_ITEM_SALE_TYPE = 'CHANGE_MARKET_ITEM_SALE_TYPE';\r\n","import {\r\n  ADD_MARKET_ITEM,\r\n  CHANGE_MARKET_ITEM_FIELD,\r\n  CHANGE_MARKET_ITEM_SALE_TYPE,\r\n  CLEAR_MARKET_ITEM_FIELDS,\r\n} from './actionTypes';\r\n\r\nexport function clearMarketItemFields() {\r\n  return { type: CLEAR_MARKET_ITEM_FIELDS };\r\n}\r\nexport function changeMarketItemField(name, value) {\r\n  return { type: CHANGE_MARKET_ITEM_FIELD, payload: { name, value } };\r\n}\r\nexport function changeMarketItemSaleType(type) {\r\n  return { type: CHANGE_MARKET_ITEM_SALE_TYPE, payload: type };\r\n}\r\n\r\nexport function addMarketItem(item) {\r\n  return { type: ADD_MARKET_ITEM, payload: item };\r\n}\r\n","import React, { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './AddMarketItem.css';\r\nimport {\r\n  addMarketItem,\r\n  clearMarketItemFields,\r\n  changeMarketItemField,\r\n  changeMarketItemSaleType,\r\n} from '../actions/actionCreators';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport default function AddMarketItem() {\r\n  const dispatch = useDispatch();\r\n  const item = useSelector(state => state.addItem);\r\n  const { name, price, image, link, saleType, oldPrice } = item;\r\n  const imageInputRef = useRef();\r\n\r\n  const dispatchPriceInput = (name, value, stateValue) => {\r\n    if (/^[0-9]+$/.test(value) || value === '') {\r\n      return dispatch(changeMarketItemField(name, value));\r\n    } else {\r\n      return stateValue;\r\n    }\r\n  }\r\n\r\n  const handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'price':\r\n        return dispatchPriceInput(name, value, price);\r\n      case 'oldPrice':\r\n        return dispatchPriceInput(name, value, oldPrice);\r\n      default:\r\n        dispatch(changeMarketItemField(name, value));\r\n    }\r\n  }\r\n\r\n  const handleSelect = (event) => {\r\n    const selectValue = event.target.value === 'default' ? null : event.target.value;\r\n    dispatch(changeMarketItemSaleType(selectValue));\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newItem = {\r\n      id: nanoid(),\r\n      name: item.name,\r\n      price: item.price,\r\n      image: item.image,\r\n      link: item.link,\r\n      saleType: item.saleType,\r\n      oldPrice: item.oldPrice,\r\n    }\r\n    dispatch(addMarketItem(newItem));\r\n    dispatch(clearMarketItemFields());\r\n  }\r\n\r\n  const handleAddImage = (event) => {\r\n    event.preventDefault();\r\n    imageInputRef.current.click();\r\n  }\r\n\r\n  const handleImageUpload = (event) => {\r\n    const image = event.target.files[0];\r\n\r\n    if (/^(image)/.test(image.type)) {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(image);\r\n      reader.onload = () => {\r\n        const { result } = reader;\r\n        dispatch(changeMarketItemField('image', result));\r\n      };\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className='add_item_form' onSubmit={ handleSubmit }>\r\n      <input className='form_input' onChange={ handleInput } name='name' value={ name === null ? '' : name } placeholder='Название' required />\r\n      <input className='form_input' onChange={ handleInput } name='price' value={ price === null ? '' : price } placeholder='Цена' required />\r\n      <input className='form_input' onChange={ handleInput } name='link' value={ link === null ? '' : link} placeholder='Ссылка на товар' />\r\n      <select className='form_select' onChange={ handleSelect }>\r\n        <option value='default'>Выбрать категорию</option>\r\n        <option value='latest'>Новинка</option>\r\n        <option value='sale'>Акция</option>\r\n        <option value='discount'>Скидка</option>\r\n      </select>\r\n      { \r\n        saleType === 'discount'\r\n        ?\r\n          <input className='form_input' onChange={ handleInput } value={ oldPrice === null ? '' : oldPrice } name='oldPrice' placeholder='Старая цена' />\r\n        :\r\n          null \r\n      }\r\n      { image ? <img className='image_preview' src={ image } alt='image_preview' /> : null }\r\n      <div>\r\n        <button onClick={ handleAddImage } className='form_submit_btn'>Выбрать изображение</button>\r\n        <button className='form_submit_btn'>Продолжить</button>\r\n      </div>    \r\n      <input ref={ imageInputRef } className='form_input file_input' onChange={ handleImageUpload } name='image' placeholder='Изображение' type='file' />\r\n    </form>\r\n  )\r\n}\r\n","import {\r\n  CHANGE_MARKET_ITEM_FIELD,\r\n  CHANGE_MARKET_ITEM_SALE_TYPE,\r\n  CLEAR_MARKET_ITEM_FIELDS,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  name: null,\r\n  price: null,\r\n  link: null,\r\n  image: null,\r\n  saleType: null,\r\n  oldPrice: null,\r\n}\r\n\r\nexport default function addItemReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_MARKET_ITEM_FIELD:\r\n      return { ...state, [action.payload.name]: action.payload.value };\r\n\r\n    case CHANGE_MARKET_ITEM_SALE_TYPE:\r\n      return { ...state, saleType: action.payload };\r\n\r\n    case CLEAR_MARKET_ITEM_FIELDS:\r\n      return initialState;\r\n  \r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { nanoid } from 'nanoid';\r\n\r\nconst data = [\r\n  {\r\n    id: nanoid(),\r\n    name: 'Товар номер 1 со скидкой',\r\n    price: 2019,\r\n    link: '...',\r\n    image: 'https://via.placeholder.com/120x150.png',\r\n    saleType: 'discount',\r\n    oldPrice: 2770,\r\n  },\r\n  {\r\n    id: nanoid(),\r\n    name: 'Товар номер 2 со скидкой и длинным названием',\r\n    price: 5690,\r\n    link: '...',\r\n    image: 'https://via.placeholder.com/120x150.png',\r\n    saleType: 'discount',\r\n    oldPrice: 5966,\r\n  },\r\n  {\r\n    id: nanoid(),\r\n    name: 'Акционный товар номер 3',\r\n    price: 2719,\r\n    link: '...',\r\n    image: 'https://via.placeholder.com/120x150.png',\r\n    saleType: 'sale',\r\n  },\r\n  {\r\n    id: nanoid(),\r\n    name: 'Товар-новинка номер 4',\r\n    price: 2689,\r\n    link: '...',\r\n    image: 'https://via.placeholder.com/120x150.png',\r\n    saleType: 'latest',\r\n  },\r\n  {\r\n    id: nanoid(),\r\n    name: 'Товар номер 5',\r\n    price: 4795,\r\n    link: '...',\r\n    image: 'https://via.placeholder.com/120x150.png',\r\n    saleType: null,\r\n  },\r\n]\r\n\r\nexport default data;\r\n","import data from '../data/data';\r\nimport {\r\n  ADD_MARKET_ITEM,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = data;\r\n\r\nexport default function marketListReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_MARKET_ITEM:\r\n      return [...state, { ...action.payload }];\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers } from 'redux';\r\nimport addItemReducer from '../reducers/addItem';\r\nimport marketListReducer from '../reducers/marketList';\r\n\r\nconst reducer = combineReducers({\r\n  addItem: addItemReducer,\r\n  marketList: marketListReducer,\r\n});\r\n\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport './Market.css';\r\nimport MarketList from './components/MarketList';\r\nimport AddMarketItem from './components/AddMarketItem';\r\n// import AddMarketItemClassBased from './components/AddMarketItemClassBased';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\n\r\nexport default function Market() {\r\n  return (\r\n    <Provider store={ store }>\r\n      <AddMarketItem />\r\n      {/* <AddMarketItemClassBased /> */}\r\n      <MarketList />\r\n    </Provider>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Navigation.css'\r\n\r\nexport default function Navigation() {\r\n  const [visibility, setVisibility] = useState(true);\r\n  const activeStyle = { color: 'rgb(100, 100, 100)' };\r\n  \r\n  return (\r\n    <div className=\"navigation\">\r\n      <i className=\"material-icons nav_icon\" onClick={ () => setVisibility(visibility ? false : true) }>\r\n        { visibility? 'navigate_before' : 'navigate_next' }\r\n      </i>\r\n      <div className={ `navigation__list ${ visibility ? '' : 'navigation_hidden' }` }>\r\n        <NavLink to=\"/first\" activeStyle={ activeStyle }>Редактирование</NavLink>\r\n        <NavLink to=\"/second\" activeStyle={ activeStyle }>Фильтрация</NavLink>\r\n        <NavLink to=\"/third\" activeStyle={ activeStyle }>Маркет</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css'\r\nimport { BrowserRouter as Router , Route } from 'react-router-dom';\r\nimport Services from './components/HW-10.1/Services'\r\nimport Filter from './components/HW-10.2/Filter'\r\nimport Market from './components/HW-10.3/Market'\r\nimport Navigation from './components/Navigation/Navigation'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navigation />\r\n        <div className=\"task\">\r\n          <Route path=\"/first\" component={ Services } />\r\n          <Route path=\"/second\" component={ Filter } />\r\n          <Route path=\"/third\" component={ Market } />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}